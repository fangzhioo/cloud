<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yue.blog.dao.mapper.BlogConfigDOMapper">
  <resultMap id="BaseResultMap" type="com.yue.blog.dao.model.BlogConfigDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="conf_key" jdbcType="VARCHAR" property="confKey" />
    <result column="conf_created_emp" jdbcType="VARCHAR" property="confCreatedEmp" />
    <result column="conf_last_emp" jdbcType="VARCHAR" property="confLastEmp" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yue.blog.dao.model.BlogConfigDO">
    <result column="conf_value" jdbcType="LONGVARCHAR" property="confValue" />
    <result column="conf_back_value" jdbcType="LONGVARCHAR" property="confBackValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, conf_key, conf_created_emp, conf_last_emp
  </sql>
  <sql id="Blob_Column_List">
    conf_value, conf_back_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yue.blog.dao.model.BlogConfigDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yue.blog.dao.model.BlogConfigDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_config
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog_config
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yue.blog.dao.model.BlogConfigDOExample">
    delete from blog_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yue.blog.dao.model.BlogConfigDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_config (gmt_create, gmt_modified, conf_key, 
      conf_created_emp, conf_last_emp, conf_value, 
      conf_back_value)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{confKey,jdbcType=VARCHAR}, 
      #{confCreatedEmp,jdbcType=VARCHAR}, #{confLastEmp,jdbcType=VARCHAR}, #{confValue,jdbcType=LONGVARCHAR}, 
      #{confBackValue,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yue.blog.dao.model.BlogConfigDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into blog_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="confKey != null">
        conf_key,
      </if>
      <if test="confCreatedEmp != null">
        conf_created_emp,
      </if>
      <if test="confLastEmp != null">
        conf_last_emp,
      </if>
      <if test="confValue != null">
        conf_value,
      </if>
      <if test="confBackValue != null">
        conf_back_value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="confKey != null">
        #{confKey,jdbcType=VARCHAR},
      </if>
      <if test="confCreatedEmp != null">
        #{confCreatedEmp,jdbcType=VARCHAR},
      </if>
      <if test="confLastEmp != null">
        #{confLastEmp,jdbcType=VARCHAR},
      </if>
      <if test="confValue != null">
        #{confValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="confBackValue != null">
        #{confBackValue,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yue.blog.dao.model.BlogConfigDOExample" resultType="java.lang.Long">
    select count(*) from blog_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.confKey != null">
        conf_key = #{record.confKey,jdbcType=VARCHAR},
      </if>
      <if test="record.confCreatedEmp != null">
        conf_created_emp = #{record.confCreatedEmp,jdbcType=VARCHAR},
      </if>
      <if test="record.confLastEmp != null">
        conf_last_emp = #{record.confLastEmp,jdbcType=VARCHAR},
      </if>
      <if test="record.confValue != null">
        conf_value = #{record.confValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.confBackValue != null">
        conf_back_value = #{record.confBackValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_config
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      conf_key = #{record.confKey,jdbcType=VARCHAR},
      conf_created_emp = #{record.confCreatedEmp,jdbcType=VARCHAR},
      conf_last_emp = #{record.confLastEmp,jdbcType=VARCHAR},
      conf_value = #{record.confValue,jdbcType=LONGVARCHAR},
      conf_back_value = #{record.confBackValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_config
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      conf_key = #{record.confKey,jdbcType=VARCHAR},
      conf_created_emp = #{record.confCreatedEmp,jdbcType=VARCHAR},
      conf_last_emp = #{record.confLastEmp,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yue.blog.dao.model.BlogConfigDO">
    update blog_config
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="confKey != null">
        conf_key = #{confKey,jdbcType=VARCHAR},
      </if>
      <if test="confCreatedEmp != null">
        conf_created_emp = #{confCreatedEmp,jdbcType=VARCHAR},
      </if>
      <if test="confLastEmp != null">
        conf_last_emp = #{confLastEmp,jdbcType=VARCHAR},
      </if>
      <if test="confValue != null">
        conf_value = #{confValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="confBackValue != null">
        conf_back_value = #{confBackValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yue.blog.dao.model.BlogConfigDO">
    update blog_config
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      conf_key = #{confKey,jdbcType=VARCHAR},
      conf_created_emp = #{confCreatedEmp,jdbcType=VARCHAR},
      conf_last_emp = #{confLastEmp,jdbcType=VARCHAR},
      conf_value = #{confValue,jdbcType=LONGVARCHAR},
      conf_back_value = #{confBackValue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yue.blog.dao.model.BlogConfigDO">
    update blog_config
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      conf_key = #{confKey,jdbcType=VARCHAR},
      conf_created_emp = #{confCreatedEmp,jdbcType=VARCHAR},
      conf_last_emp = #{confLastEmp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>